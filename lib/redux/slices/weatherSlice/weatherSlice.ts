/* Core */
import { createSlice, type PayloadAction } from '@reduxjs/toolkit'
import { getWeatherAsync } from './thunks';
import { WeatherSliceState } from './typings';

const initialState: WeatherSliceState = {
  icon: undefined,
  main: null,
  description: null,
  status: 'idle',
}

export const weatherSlice = createSlice({
  name: 'weather',
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
    // Use the PayloadAction type to declare the contents of `action.payload`
    setWeatherState: (state, action: PayloadAction<WeatherSliceState>) => {
      state.main = action.payload.main
      state.description = action.payload.description
      state.icon = action.payload.icon
    },
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {
    builder
      .addCase(getWeatherAsync.pending, (state) => {
        state.status = 'loading'
      })
      .addCase(getWeatherAsync.fulfilled, (state, action: PayloadAction<WeatherSliceState>) => {
        state.status = 'idle'
        state.main = action.payload.main
        state.description = action.payload.description
        state.icon = action.payload.icon
      })
  },
})